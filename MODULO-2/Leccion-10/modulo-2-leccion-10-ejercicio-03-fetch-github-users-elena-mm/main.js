'use strict';

// Tenemos que crear un buscador de usuarios en Github que nos muestr el nombre, la foto de avatar y el n칰mero de repositorios de un usuario de github que busquemos en el input

// Vamos a necesitar:
// 1. Crear una referencia al input y al bot칩n de buscar
// 2. A침adirle al bot칩n un eventListener de click que llame a una funci칩n getUser()
// 3. Definir una funci칩n getUser() que va a hacer lo siguiente:
//
//      3.1. Hacer una petici칩n fetch() a la api de github https://api.github.com/users/{username}
//           donde "username" ser칤a el input que usuario introduzca --> necesitamos crear variable que haga
//           referencia al valor del input y en vez de escribir en el fetch() "https://api.github.com/users/{username}"
//           Tenemos que escribir `https://api.github.com/users/${username}` --> de esta manera el valor del input
//           se meter치 en la direcci칩n
//
//      3.2. Hacer json() al response del servidor
//
//      3.3. Con el data que nos devuelva el json(), vamos a crear constantes que hagan referencia a la imagen del html,
//           el p치rrafo que contiene el nombre y el que contiene el n췈 de repositorios
//
//      3.4. (FIN) asignarle como valor a la imagen y p치rrafos los datos que hemos obtenido del api. Para esto tenemos que fijarnos en
//           cu치les son las keys que se refieren al avatar, username y n칰mero de repositorios (mirar documentaci칩n!)

// 1. Creamos referencia al bot칩n
const button = document.querySelector('.btn');

// 2. A침adir eventlistener al bot칩n
button.addEventListener('click', getUser);

// 3. Definir funci칩n getUser()
function getUser() {
  // Creamos referencia al valor del input
  const username = document.querySelector('.username').value;

  // 3.1. Hacer el fetch a침adiendo la variable del username a la direcci칩n para que nos de la info personalizada de dicho usuario
  fetch(`https://api.github.com/users/${username}`)
    // 3.2. hacer el json() al response del servidor
    .then((response) => response.json())

    // 3.3. Con el data que nos devuelve json, crear constantes que hagan referencia a img, p치rrafos, etc
    .then((data) => {
      console.log(data);
      const img = document.querySelector('.avatar');
      const name = document.querySelector('.name');
      const numberRepositories = document.querySelector('.repositories');

      // 3.4. Asignamos como valor de estas constantes los datos que hemos obtenido de la api. En este caso, las propiedades que queremos acceder son: "name" (nombre), "avatarl_url" (imagen) y "public_repos" (n췈 de repositorios). Si no entiendes de d칩nde he sacado estos nombres, 칠chale un ojo a este ejemplo (de Miguel tihihi): https://api.github.com/users/migueldelmazo
      img.src = data.avatar_url;
      name.innerHTML = data.name;
      numberRepositories.innerHTML = data.public_repos;
    });
}

// 游붉 EMM
